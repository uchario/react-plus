{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\uchechukwu.ariolu\\\\Downloads\\\\react_plus\\\\form_user_input\\\\src\\\\components\\\\SimpleInput.js\",\n  _s = $RefreshSig$();\nimport useInput from '../hooks/use-input';\nimport Input from '../Form/Input';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SimpleInput = props => {\n  _s();\n  const {\n    enteredValue: enteredName,\n    valueIsValid: enteredNameIsValid,\n    hasError: enteredNameHasError,\n    valueChangeHandler: nameChangeHandler,\n    valueBlurHandler: nameBlurHandler,\n    reset\n  } = useInput(value => value.trim() !== '');\n  const {\n    enteredValue: enteredEmail,\n    valueIsValid: enteredEmailIsValid,\n    hasError: enteredEmailHasError,\n    valueChangeHandler: emailChangeHandler,\n    valueBlurHandler: emailBlurHandler\n  } = useInput(value => value.trim().includes('@'));\n  let formIsValid = false;\n  const submitFormHandler = event => {\n    event.preventDefault();\n    if (!enteredNameIsValid) {\n      nameBlurHandler(event);\n      return;\n    }\n    if (!enteredEmailIsValid) {\n      emailBlurHandler(event);\n      return;\n    }\n    console.log(enteredName);\n    reset();\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitFormHandler,\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      htmlFor: \"name\",\n      label: \"Name\",\n      input: {\n        type: 'text',\n        id: 'name',\n        name: 'name',\n        value: `${enteredName}`\n      },\n      onChange: nameChangeHandler,\n      onBlur: nameBlurHandler,\n      error: enteredNameHasError,\n      error: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      htmlFor: \"email\",\n      label: \"Email\",\n      input: {\n        type: 'email',\n        id: 'email',\n        value: `${enteredEmail}`\n      },\n      onChange: emailChangeHandler,\n      onBlur: emailBlurHandler,\n      error: enteredEmailHasError && /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          'color': 'red'\n        },\n        children: \"Email is invalid\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 44\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(SimpleInput, \"6a6ggmjlap5Gk5tW61h2LfrUiHQ=\", false, function () {\n  return [useInput, useInput];\n});\n_c = SimpleInput;\nexport default SimpleInput;\nvar _c;\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["useInput","Input","jsxDEV","_jsxDEV","SimpleInput","props","_s","enteredValue","enteredName","valueIsValid","enteredNameIsValid","hasError","enteredNameHasError","valueChangeHandler","nameChangeHandler","valueBlurHandler","nameBlurHandler","reset","value","trim","enteredEmail","enteredEmailIsValid","enteredEmailHasError","emailChangeHandler","emailBlurHandler","includes","formIsValid","submitFormHandler","event","preventDefault","console","log","onSubmit","children","htmlFor","label","input","type","id","name","onChange","onBlur","error","fileName","_jsxFileName","lineNumber","columnNumber","style","className","_c","$RefreshReg$"],"sources":["C:/Users/uchechukwu.ariolu/Downloads/react_plus/form_user_input/src/components/SimpleInput.js"],"sourcesContent":["import useInput from '../hooks/use-input';\n\nimport Input from '../Form/Input';\n\nconst SimpleInput = (props) => {\n  const {\n    enteredValue: enteredName,\n    valueIsValid: enteredNameIsValid,\n    hasError: enteredNameHasError,\n    valueChangeHandler: nameChangeHandler,\n    valueBlurHandler: nameBlurHandler,\n    reset\n   } = useInput(value => value.trim() !== '');\n\n  const {\n    enteredValue: enteredEmail,\n    valueIsValid: enteredEmailIsValid,\n    hasError: enteredEmailHasError,\n    valueChangeHandler: emailChangeHandler,\n    valueBlurHandler: emailBlurHandler,\n   } = useInput(value => value.trim().includes('@'));\n\n  let formIsValid = false;\n\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n    if(!enteredNameIsValid) {\n      nameBlurHandler(event);\n      return;\n    }\n    if(!enteredEmailIsValid) {\n      emailBlurHandler(event);\n      return;\n    }\n    console.log(enteredName);\n    reset();\n  };\n\n  return (\n    <form onSubmit={submitFormHandler}>\n        <Input\n          htmlFor='name'\n          label='Name'\n          input={\n            {\n              type:'text',\n              id:'name',\n              name: 'name',\n              value: `${enteredName}`\n            }\n          }  \n          onChange={nameChangeHandler}\n          onBlur={nameBlurHandler}\n          error={enteredNameHasError}\n          error\n        />\n        <Input \n          htmlFor='email'\n          label='Email'\n          input={{ \n            type:'email',\n            id:'email',\n            value:`${enteredEmail}`\n           }}\n          onChange={emailChangeHandler}\n          onBlur={emailBlurHandler}\n          error={(enteredEmailHasError) && <span style={{ 'color': 'red'}}>Email is invalid</span>}\n        />\n      <div className=\"form-actions\">\n        <button>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}