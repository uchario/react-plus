{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialCartState = {\n  showCart: false,\n  items: [],\n  totalQuantity: 0,\n  notification: null\n};\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState: initialCartState,\n  reducers: {\n    addItemToCart(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.items.find(item => item.id === newItem.id);\n      state.totalQuantity++;\n      if (!existingItem) {\n        state.items.push({\n          id: newItem.id,\n          title: newItem.title,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price\n        });\n      } else {\n        existingItem.quantity++;\n        existingItem.totalPrice += newItem.price;\n      }\n    },\n    removeItemFromCart(state, action) {\n      const id = action.payload;\n      const existingItem = state.items.find(item => item.id === id);\n      state.totalQuantity--;\n      if (existingItem.quantity === 1) {\n        state.items.filter(item => item.id !== id);\n      } else {\n        existingItem.quantity--;\n        existingItem.totalPrice -= existingItem.price;\n      }\n    },\n    toggle(state) {\n      state.showCart = !state.showCart;\n    },\n    showNotification(state, action) {\n      state.notification = {\n        status: action.payload.status\n      };\n    }\n  }\n});\nconst cartStore = cartSlice.reducer;\nexport const cartActions = cartSlice.actions;\nexport default cartStore;","map":{"version":3,"names":["createSlice","initialCartState","showCart","items","totalQuantity","notification","cartSlice","name","initialState","reducers","addItemToCart","state","action","newItem","payload","existingItem","find","item","id","push","title","price","quantity","totalPrice","removeItemFromCart","filter","toggle","showNotification","status","cartStore","reducer","cartActions","actions"],"sources":["C:/Users/uchechukwu.ariolu/Downloads/react_plus/redux_and_side_effects/src/store/cart.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialCartState = {\r\n    showCart: false,\r\n    items: [],\r\n    totalQuantity: 0,\r\n    notification: null\r\n};\r\n\r\nconst cartSlice = createSlice({\r\n    name: 'cart',\r\n    initialState: initialCartState,\r\n    reducers: {\r\n        addItemToCart(state, action) {\r\n            const newItem = action.payload;\r\n            const existingItem = state.items.find(item => item.id === newItem.id);\r\n            state.totalQuantity++;\r\n            if(!existingItem) {\r\n                state.items.push({\r\n                    id: newItem.id,\r\n                    title: newItem.title,\r\n                    price: newItem.price,\r\n                    quantity: 1,\r\n                    totalPrice: newItem.price\r\n                });\r\n            } else {\r\n                existingItem.quantity++;\r\n                existingItem.totalPrice += newItem.price;\r\n            }\r\n        },\r\n        removeItemFromCart(state, action) {\r\n            const id = action.payload;\r\n            const existingItem = state.items.find(item => item.id === id);\r\n            state.totalQuantity--;\r\n            if(existingItem.quantity === 1) {\r\n                state.items.filter(item => item.id !== id);\r\n            } else {\r\n                existingItem.quantity--;\r\n                existingItem.totalPrice -= existingItem.price;\r\n            }\r\n        },\r\n        toggle(state) {\r\n            state.showCart = !state.showCart;\r\n        },\r\n        showNotification(state, action) {\r\n            state.notification = {\r\n                status: action.payload.status,\r\n                \r\n            }\r\n        }\r\n    }\r\n});\r\n\r\nconst cartStore = cartSlice.reducer;\r\n\r\nexport const cartActions = cartSlice.actions;\r\n\r\nexport default cartStore;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,gBAAgB,GAAG;EACrBC,QAAQ,EAAE,KAAK;EACfC,KAAK,EAAE,EAAE;EACTC,aAAa,EAAE,CAAC;EAChBC,YAAY,EAAE;AAClB,CAAC;AAED,MAAMC,SAAS,GAAGN,WAAW,CAAC;EAC1BO,IAAI,EAAE,MAAM;EACZC,YAAY,EAAEP,gBAAgB;EAC9BQ,QAAQ,EAAE;IACNC,aAAaA,CAACC,KAAK,EAAEC,MAAM,EAAE;MACzB,MAAMC,OAAO,GAAGD,MAAM,CAACE,OAAO;MAC9B,MAAMC,YAAY,GAAGJ,KAAK,CAACR,KAAK,CAACa,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKL,OAAO,CAACK,EAAE,CAAC;MACrEP,KAAK,CAACP,aAAa,EAAE;MACrB,IAAG,CAACW,YAAY,EAAE;QACdJ,KAAK,CAACR,KAAK,CAACgB,IAAI,CAAC;UACbD,EAAE,EAAEL,OAAO,CAACK,EAAE;UACdE,KAAK,EAAEP,OAAO,CAACO,KAAK;UACpBC,KAAK,EAAER,OAAO,CAACQ,KAAK;UACpBC,QAAQ,EAAE,CAAC;UACXC,UAAU,EAAEV,OAAO,CAACQ;QACxB,CAAC,CAAC;MACN,CAAC,MAAM;QACHN,YAAY,CAACO,QAAQ,EAAE;QACvBP,YAAY,CAACQ,UAAU,IAAIV,OAAO,CAACQ,KAAK;MAC5C;IACJ,CAAC;IACDG,kBAAkBA,CAACb,KAAK,EAAEC,MAAM,EAAE;MAC9B,MAAMM,EAAE,GAAGN,MAAM,CAACE,OAAO;MACzB,MAAMC,YAAY,GAAGJ,KAAK,CAACR,KAAK,CAACa,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKA,EAAE,CAAC;MAC7DP,KAAK,CAACP,aAAa,EAAE;MACrB,IAAGW,YAAY,CAACO,QAAQ,KAAK,CAAC,EAAE;QAC5BX,KAAK,CAACR,KAAK,CAACsB,MAAM,CAACR,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKA,EAAE,CAAC;MAC9C,CAAC,MAAM;QACHH,YAAY,CAACO,QAAQ,EAAE;QACvBP,YAAY,CAACQ,UAAU,IAAIR,YAAY,CAACM,KAAK;MACjD;IACJ,CAAC;IACDK,MAAMA,CAACf,KAAK,EAAE;MACVA,KAAK,CAACT,QAAQ,GAAG,CAACS,KAAK,CAACT,QAAQ;IACpC,CAAC;IACDyB,gBAAgBA,CAAChB,KAAK,EAAEC,MAAM,EAAE;MAC5BD,KAAK,CAACN,YAAY,GAAG;QACjBuB,MAAM,EAAEhB,MAAM,CAACE,OAAO,CAACc;MAE3B,CAAC;IACL;EACJ;AACJ,CAAC,CAAC;AAEF,MAAMC,SAAS,GAAGvB,SAAS,CAACwB,OAAO;AAEnC,OAAO,MAAMC,WAAW,GAAGzB,SAAS,CAAC0B,OAAO;AAE5C,eAAeH,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}